from dataclasses import dataclass, field
from string import Template

from aiogram import types, Bot
from aiogram.utils import markdown as m


@dataclass
class SendingData:
    uid: str
    text: str | Template
    url: str
    btn_title: str
    photo: str | None = None

    kb: types.InlineKeyboardMarkup = field(init=False)
    count: int = field(init=False)

    async def get_text(self, bot: Bot, user_id: int, name: str = None):
        if isinstance(self.text, str):
            return self.text
        else:
            if name is None:
                chat_member = await bot.get_chat_member(user_id, user_id)
                name = chat_member.user.first_name
            name = m.quote_html(name)
            return self.text.substitute(name=name)

    def __post_init__(self):
        self.kb = types.InlineKeyboardMarkup()
        self.kb.add(types.InlineKeyboardButton(self.btn_title, url=self.url))
        # self.kb.add(types.InlineKeyboardButton('üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫', url=self.url))
        # self.kb.add(types.InlineKeyboardButton('üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫', callback_data="black_friday?get_gift"))
        self.count = 0


bf_sending = SendingData("sending_30_april",
                         Template(f'{m.hbold("–Ø –¥–∏–∫–æ –∏–∑–≤–∏–Ω—è—é—Å—å")}üòû\n\n–ò–∑ –∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –≤ –±–æ—Ç–µ –º–Ω–æ–≥–∏–µ –∏–∑ –≤–∞—Å –Ω–µ —Å–º–æ–≥–ª–∏ –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å—É–¥—å–±—ã –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è.ü•≤\n\nü§©–ü–æ—ç—Ç–æ–º—É —è –ø—Ä–∏–º—É —Å–µ–≥–æ–¥–Ω—è –≤—Å–µ—Ö –∫—Ç–æ —É—Å–ø–µ–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –¥–æ 21—á –ø–æ –º—Å–∫ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –º–Ω–µ –≤ –ª–∏—á–∫—É @spiriti_guide\n\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –≤–∞—à –¥—É—Ö–æ–≤–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ ‚ù§Ô∏è'),
                         url="https://t.me/spiriti_guide",
                         btn_title="–ù–∞–ø–∏—Å–∞—Ç—å"
                         )
